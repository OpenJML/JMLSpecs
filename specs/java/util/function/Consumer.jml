package java.util.function;

public interface Consumer<T> {
    //@ public behavior
    //@   requires true;
    //@ pure
    void accept(T t);
    
    //@ public normal_behavior
    //@   ensures \fresh(\result);  // FIXME - how to specify a composed Consumer
    //@ pure
    public java.util.function.Consumer<T> andThen(java.util.function.Consumer<? super T> f);

    /*@ model public static interface Local<T> extends Consumer<T> {
           also public normal_behavior
              requires t != null;
              assignable t.*;
           void accept(T t);
        }
    
     @*/

}
