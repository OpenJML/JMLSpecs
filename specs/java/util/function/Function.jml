package java.util.function;

//@ non_null_by_default immutable
@FunctionalInterface
public interface Function<T,R> {

      //@ model public instance JMLDataGroup applyFrame;
      
      //@ public normal_behavior
      //@   assignable applyFrame;
      public abstract R apply(T t);
      
      default public <V> Function<V, R> compose(Function<? super V, ? extends T> before);

      default public <V> Function<T, V> andThen(Function<? super R, ? extends V> after);

      /*@  @FunctionalInterface model public static immutable interface Pure<T,R> extends Function<T,R> {
      @   also public normal_behavior
      @     assignable \nothing;
      @   pure function
      @   @Override
      @   public nullable R apply(nullable T t);
      @ }
      @*/
      

    
      /*@ public static immutable model interface Identity<T> extends Function<T,T> {
      @   also public model_program {
      @      return t;
      @   }
      @   pure function
      @   public nullable T apply(nullable T t);
      @ }
      @*/
    
      //@ public normal_behavior
      //@   ensures \result instanceof Identity;
      //@ pure
      public static <T> Function<T, T> identity();
      
      /*@
      static model interface NoNulls<T,R> extends Function<T,R> {
        
        also public normal_behavior
          ensures \result != null;
        R apply(T p);
      }
      @*/
      

}
