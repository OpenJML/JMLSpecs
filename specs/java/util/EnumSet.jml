package java.util;

//@ non_null_by_default
public abstract class EnumSet<E extends java.lang.Enum<E>> extends AbstractSet<E> implements java.lang.Cloneable, java.io.Serializable {
//      final java.lang.Class<E> elementType;
//      final java.lang.Enum<?>[] universe;
//      private static java.lang.Enum<?>[] ZERO_LENGTH_ENUM_ARRAY;
//      EnumSet(java.lang.Class<E>, java.lang.Enum<?>[]);
    
    // FIXME - need specific output
    
    //@ public normal_behavior
    //@   requires true;
    //@ pure
    public static <E extends java.lang.Enum<E>> EnumSet<E> noneOf(java.lang.Class<E> clazz);
    //@ public normal_behavior
    //@   requires true;
    //@ pure
    public static <E extends java.lang.Enum<E>> EnumSet<E> allOf(java.lang.Class<E> clazz);
    //@ normal_behavior
    //@   requires true;
    //@ pure
    abstract void addAll();
    //@ public normal_behavior
    //@   requires true;
    //@ pure
    public static <E extends java.lang.Enum<E>> EnumSet<E> copyOf(EnumSet<E> clazz);
    //@ public normal_behavior
    //@   requires true;
    //@ pure
    public static <E extends java.lang.Enum<E>> EnumSet<E> copyOf(Collection<E> col);
    //@ public normal_behavior
    //@   requires true;
    //@ pure
    public static <E extends java.lang.Enum<E>> EnumSet<E> complementOf(EnumSet<E> set);
    //@ public normal_behavior
    //@   requires true;
    //@ pure
    public static <E extends java.lang.Enum<E>> EnumSet<E> of(E e);
    //@ public normal_behavior
    //@   requires true;
    //@ pure
    public static <E extends java.lang.Enum<E>> EnumSet<E> of(E e1, E e2);
    //@ public normal_behavior
    //@   requires true;
    //@ pure
    public static <E extends java.lang.Enum<E>> EnumSet<E> of(E e1, E e2, E e3);
    //@ public normal_behavior
    //@   requires true;
    //@ pure
    public static <E extends java.lang.Enum<E>> EnumSet<E> of(E e1, E e2, E e3, E e4);
    //@ public normal_behavior
    //@   requires true;
    //@ pure
    public static <E extends java.lang.Enum<E>> EnumSet<E> of(E e1, E e2, E e3, E e4, E e5);
    //@ public normal_behavior
    //@   requires true;
    //@ pure
    @java.lang.SafeVarargs
    public static <E extends java.lang.Enum<E>> EnumSet<E> of(E e, E... ee);
    //@ public normal_behavior
    //@   requires true;
    //@ pure
    public static <E extends java.lang.Enum<E>> EnumSet<E> range(E from, E to);

//      abstract void addRange(E, E);
//      public EnumSet<E> clone();
//      abstract void complement();
//      final void typeCheck(E);
//      private static <E extends java.lang.Enum<E>> E[] getUniverse(java.lang.Class<E>);
//      java.lang.Object writeReplace();
//      private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException;
//      public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    
}
