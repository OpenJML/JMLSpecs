package org.jmlspecs.lang;

//@ immutable pure non_null_by_default
public class map<K,V> implements IJmlPrimitiveType, IJmlArrayLike {
   

    //@ public normal_behavior
    //@   ensures (\forall KK k; ; \result[k] == null && \result.has(k) == false);
    //@ no_state
    public static <KK,VV> map<KK,VV> empty();
    
    //@ public normal_behavior
    //@   ensures \result == this[k];
    //@ no_state
    public V get(K k);

    //@ public normal_behavior
    //@   ensures this[k] != null;
    //@ no_state
    public boolean has(K k);

    //@ public normal_behavior
    //@   ensures \result == (\forall K k;; s[k] == this[k]);
    //@ no_state
    public boolean eq(map<K,V> s);
    
    //@ public normal_behavior
    //@   ensures !eq(s);
    //@ no_state
    public boolean ne(map<K,V> s);
        
    //@ public normal_behavior
    //@   ensures \result[k] == v;
    //@   ensures \result.has(k);
    //@   ensures (\forall K kk;; k != kk ==> (\result[kk] == this[kk]));
    //@   ensures this[k] == v ==> \result == this;
    //@ no_state
    public map<K,V> put(K k, V v);

}

