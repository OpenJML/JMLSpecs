package org.jmlspecs.lang;

//@ immutable no_state
public class intset implements IJmlPrimitiveType, IJmlIntArrayLike {
/* @    
    public normal_behavior
      ensures \result >= 0;
    model no_state public \bigint size();
    
    public normal_behavior
       ensures \result == this[x];
    model no_state public boolean contains(\bigint x);

    public normal_behavior
      ensures \result == (this.size() == 0);
    model no_state public boolean empty();
    
    public normal_behavior
      ensures \result.size() == 0;
      ensures (\forall \bigint x; ; !\result[x]);
    model no_state static public \intset intset();
    
    public normal_behavior
      ensures \result.size() == 1;
      ensures \result[t];
      ensures (\forall \bigint x; ; x != t ==> !\result[x]);
    model no_state static public intset set(\bigint t);
    
    public normal_behavior
       ensures \result == (\forall \bigint t;; s[t] == ss[t]);
    model no_state public static boolean equals(\intset s, \intset ss);
    
    public normal_behavior
       ensures \result == (this == s || equals(this,s));
    model no_state public boolean equals(\intset s);
    
    public normal_behavior
      ensures this[x] ==> \result == this;
      ensures !this[x] ==> \result.size() == this.size() + 1;
      ensures \result[x];
      ensures (\forall \bigint t; t != x; \result[t] == this[t]);
    model no_state public \intset add(\bigint x);
    
    public normal_behavior
      ensures !this[x] ==> \result == this;
      ensures this[x] ==> \result.size() == this.size() - 1;
      ensures !\result[x];
      ensures (\forall \bigint t; t != x; \result[t] == this[t]);
    model no_state public \intset remove(\bigint x);

    public normal_behavior
        ensures \result[i] == c;
        ensures \forall \bigint j; j != i; \result[j] == this[j];
        ensures this[i] == c ==> \result == this;
    model no_state public \intset put(\bigint i, boolean c);


@*/
}
